function k=term_App_matrix(x1,y1,x2,y2,x3,y3,x4,y4,d1,d2,d3,d4)

global c0 lambda mu

k=c0*area_cuadrilatero(x1,y1,x2,y2,x3,y3,x4,y4)+...
  d1*((3*lambda + 4*mu)*(x1^2 + y1^2) + 2*(lambda + mu)*(x4^2 + y2^2 - 2*(x1*x4 + y1*y2)) - ...
             2*lambda*(x1 - x2)*(y1 - y4) + (lambda + 2*mu)*(x2^2 + y4^2 - 2*(x1*x2 + y1*y4))) + ...
  d2*((3*lambda + 4*mu)*(x2^2 + y2^2) + 2*(lambda + mu)*(x3^2 + y1^2 - 2*(x2*x3 + y1*y2)) - ...
             2*lambda*(x1 - x2)*(y2 - y3) + (lambda + 2*mu)*(x1^2 + y3^2 - 2*(x1*x2 + y2*y3))) + ...
  d3*((lambda + 2*mu)*(x4^2 + y2^2) + 2*lambda*(x3 - x4)*(y2 - y3) - 2*(lambda + 2*mu)*(x3*x4 + y2*y3) + ...
             (3*lambda + 4*mu)*(x3^2 + y3^2) - 4*(lambda + mu)*(x2*x3 + y3*y4) + 2*(lambda + mu)*(x2^2 + y4^2)) + ...
  d4*((lambda + 2*mu)*(x3^2 + y1^2) + 2*(lambda + mu)*(x1^2 + y3^2) + 2*lambda*(x3 - x4)*(y1 - y4) - ...
             2*(lambda + 2*mu)*(x3*x4 + y1*y4) - 4*(lambda + mu)*(x1*x4 + y3*y4) + (3*lambda + 4*mu)*(x4^2 + y4^2));

end